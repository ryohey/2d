{"version":3,"sources":["helpers/functionHelper.ts","topology/Tree.ts","topology/graphToTree.ts","helpers/buildCode.ts","helpers/typeHelper.ts","stores/GraphStore.ts","helpers/exampleGraph.ts","hooks.ts","containers/Toolbar.tsx","helpers/exampleCodes.ts","types.ts","components/Drag.tsx","components/HelpModal.tsx","components/DrawCanvas.tsx","components/DropDownMenu.tsx","containers/EditFuncModal.tsx","containers/FuncNode.tsx","containers/VariableNode.tsx","containers/Stage.tsx","containers/ToolBox.tsx","containers/App.tsx","helpers/createMouseHandler.ts","stores/CodeStore.ts","stores/store.ts","index.tsx","components/Icon.tsx","helpers/getElementType.ts"],"names":["createFunction","code","eval","STRIP_COMMENTS","ARGUMENT_NAMES","getParamNames","func","fnStr","toString","replace","result","slice","indexOf","match","foldTree","tree","fn","children","map","c","makeTree","graph","rootNode","edges","filter","edge","toId","id","childNodes","nodes","node","fromId","length","Error","childNode","value","graphToTree","getRootNodes","n","getFuncVarName","f","name","undefined","window","makeFuncNodeCode","nodeId","funcName","varName","promiseInputs","isPromise","join","i","isAsync","some","buildCode","trees","functionCodes","isFuncNode","getOriginNode","type","originNode","reference","isReferenceFuncNode","makeVariableNodeCode","notEmpty","getNode","find","b","getFuncNode","getOriginFuncNode","getDisplayNode","origin","x","y","linked","inputNames","getFuncNodeInputNames","allDisplayNodes","lastNodeId","maxId","_","max","createFuncNode","appendNode","graphSlice","createSlice","initialState","current","toIndex","editingNode","previewEdge","previewNode","reducers","setEdges","state","action","payload","setNodes","setEditingNode","setPreviewEdge","setPreviewNode","addNode","dupulicateNode","block","addReferenceFuncNode","updateNode","obj","addEdge","removeNode","removeNodeIds","includes","e","removeEdge","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","Toolbar","onClickHelp","dispatch","onClickPlay","onClickClear","className","onClick","target","href","codes","isVariableNode","DragContext","createContext","startData","startPosition","container","handler","DragContainer","props","onMouseDown","onMouseDragMove","onMouseUp","restProps","useState","setState","divRef","useRef","useEffect","Provider","data","onMount","DragTrigger","useContext","getRelativePosition","offset","offsetLeft","offsetTop","pageX","pageY","ref","stopPropagation","originEvent","start","onMouseMove","pos","movement","end","HelpContent","HelpModal","isOpen","close","contentLabel","onRequestClose","overlayClassName","DrawCanvas","draw","width","height","canvas","setCanvas","ctx","getContext","Container","styled","div","DropDownMenu","items","position","style","left","top","item","EditFuncModal","closeModal","modalInput","setModalInput","onSubmit","preventDefault","onChange","checked","LeftPort","dragData","Icon","RightPort","FuncNode","isPreview","containerRef","isMenuOpened","setIsMenuOpened","classes","openModal","onDoubleClick","index","VariableNode","Stage","setContainer","blockElements","setBlockElements","menuPosition","setMenuPosition","positionOfInput","positionOfOutput","clientWidth","bounds","currentTarget","getBoundingClientRect","clientX","clientY","renderCurve","from","to","beginPath","moveTo","curveLength","Math","abs","bezierCurveTo","stroke","clearRect","lineWidth","strokeStyle","toPosition","clientHeight","ToolBox","CodeOutput","App","isHelpModalOpen","setIsHelpModalOpen","mouseHandler","useCallback","console","log","useMouseHandler","codeSlice","exampleCodes","store","configureStore","reducer","ReactDOM","render","document","getElementById","component","ElementType","preferredElement","defaultElement","classnames"],"mappings":"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","file":"static/js/main.ef279732.chunk.js","sourcesContent":["export function createFunction(code: string): Function {\n  return eval(`() => { return ${code} }`)()\n}\n\n// https://stackoverflow.com/a/9924463/1567777\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm\nconst ARGUMENT_NAMES = /([^\\s,]+)/g\nexport function getParamNames(func: Function): string[] {\n  const fnStr = func.toString().replace(STRIP_COMMENTS, \"\")\n  const result = fnStr\n    .slice(fnStr.indexOf(\"(\") + 1, fnStr.indexOf(\")\"))\n    .match(ARGUMENT_NAMES)\n  return result === null ? [] : result\n}\n","export interface ITree<T> {\n  value: T\n  children: ITree<T>[]\n}\n\n// 木構造の末端からまとめあげる\nexport const foldTree = <T, S>(\n  tree: ITree<T>,\n  fn: (node: ITree<T>, children: S[]) => S\n): S => {\n  return fn(\n    tree,\n    tree.children.map((c) => foldTree(c, fn))\n  )\n}\n","import { INode, IEdge, IGraph } from \"./Graph\"\nimport { ITree } from \"./Tree\"\n\nconst getRootNodes = <Node extends INode, Edge extends IEdge>(\n  graph: IGraph<Node, Edge>\n): Node[] =>\n  graph.nodes.filter(\n    (node) =>\n      graph.edges.filter((edge) => edge.fromId === node.id).length === 0 &&\n      graph.edges.filter((edge) => edge.toId === node.id).length > 0\n  )\n\nconst makeTree = <Node extends INode, Edge extends IEdge>(\n  graph: IGraph<Node, Edge>,\n  rootNode: Node\n): ITree<Node> => {\n  const children = graph.edges\n    .filter((edge) => edge.toId === rootNode.id)\n    .map((edge) => {\n      const childNodes = graph.nodes.filter((node) => node.id === edge.fromId)\n      if (childNodes.length === 0) {\n        throw new Error(`node id ${edge.fromId} is not exist`)\n      }\n      if (childNodes.length > 1) {\n        throw new Error(`There are multiple nodes for id ${edge.fromId}`)\n      }\n      const childNode = childNodes[0]\n      return makeTree(graph, childNode)\n    })\n\n  return {\n    value: rootNode,\n    children,\n  }\n}\n\nexport const graphToTree = <Node extends INode, Edge extends IEdge>(\n  graph: IGraph<Node, Edge>\n): ITree<Node>[] => getRootNodes(graph).map((n) => makeTree(graph, n))\n","import {\n  IFuncNode,\n  isFuncNode,\n  isReferenceFuncNode,\n  AnyNode,\n  AnyFuncNode,\n  FuncEdge,\n  IVariableNode,\n} from \"../types\"\nimport { foldTree } from \"../topology/Tree\"\nimport { graphToTree } from \"../topology/graphToTree\"\nimport { NodeId, IGraph } from \"../topology/Graph\"\n\ninterface IntermediateCode {\n  code: string\n  varName: string\n  isPromise: boolean\n}\n\nconst getFuncVarName = (node: { name: string; id: NodeId }) => {\n  const f = node.name ? `${node.name}` : `func${node.id}`\n  if ((window as any)[f] !== undefined) {\n    // グローバルな関数と名前が被らないようにする\n    return `__${f}`\n  }\n  return f\n}\n\nconst makeFuncNodeCode = (\n  node: IFuncNode,\n  nodeId: NodeId,\n  children: IntermediateCode[]\n): IntermediateCode => {\n  const funcName = getFuncVarName(node)\n  const varName = `${node.name}_out${nodeId}`\n\n  const promiseInputs = children\n    .filter((c) => c.isPromise)\n    .map((c) => c.varName)\n  let code: string\n\n  if (promiseInputs.length === 0) {\n    code = `const ${varName} = ${funcName}(${children\n      .map((c) => c.varName)\n      .join(\", \")})`\n  } else {\n    code = `const ${varName} = Promise.all([\n      ${promiseInputs.join(\", \")}\n    ]).then(result => {\n      const [${promiseInputs.map((i) => i + \"_p\").join(\", \")}] = result\n      return ${funcName}(${children\n      .map((c) => (c.isPromise ? c.varName + \"_p\" : c.varName))\n      .join(\", \")})\n    })`\n  }\n\n  return {\n    code: children.map((c) => c.code).join(\"\\n\") + \"\\n\" + code,\n    varName,\n    isPromise: node.isAsync || children.some((c) => c.isPromise),\n  }\n}\n\nconst makeVariableNodeCode = (node: IVariableNode): IntermediateCode => {\n  const varName = getFuncVarName(node)\n  return {\n    code: `const ${varName} = ${node.value.value}`,\n    varName,\n    isPromise: false,\n  }\n}\n\nexport default function buildCode(graph: IGraph<AnyNode, FuncEdge>) {\n  const { nodes } = graph\n  const trees = graphToTree(graph)\n\n  const functionCodes = nodes\n    .filter(isFuncNode)\n    .map((node) => {\n      const varName = getFuncVarName(node)\n      return `const ${varName} = ${node.code}`\n    })\n    .join(\"\\n\")\n\n  const getOriginNode = (node: AnyFuncNode): IFuncNode => {\n    switch (node.type) {\n      case \"FuncNode\":\n        return node\n      case \"ReferenceFuncNode\":\n        const originNode = nodes.filter((n) => n.id === node.reference)[0]\n        if (isFuncNode(originNode)) {\n          return originNode\n        }\n        if (isReferenceFuncNode(originNode)) {\n          return getOriginNode(originNode)\n        }\n        throw new Error(\"Origin node is not FuncNode\")\n    }\n  }\n\n  // create function calls\n  const codes = trees.map((tree) =>\n    foldTree(tree, (node, children: IntermediateCode[]) => {\n      switch (node.value.type) {\n        case \"FuncNode\":\n          return makeFuncNodeCode(node.value, node.value.id, children)\n        case \"ReferenceFuncNode\":\n          const originNode = getOriginNode(node.value)\n          return makeFuncNodeCode(originNode, node.value.id, children)\n        case \"VariableNode\":\n          return makeVariableNodeCode(node.value)\n      }\n    })\n  )\n\n  return functionCodes + \"\\n\" + codes.map((c) => c.code).join(\"\\n\")\n}\n","import { Omit } from \"lodash\"\n\n// https://stackoverflow.com/a/46700791\nexport function notEmpty<TValue>(\n  value: TValue | null | undefined\n): value is TValue {\n  return value !== null && value !== undefined\n}\n\nexport type Optional<T, S extends keyof T> = Omit<T, S> & Partial<Pick<T, S>>\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport _ from \"lodash\"\nimport { exampleGraph } from \"../helpers/exampleGraph\"\nimport { createFunction, getParamNames } from \"../helpers/functionHelper\"\nimport { notEmpty } from \"../helpers/typeHelper\"\nimport { IGraph, NodeId } from \"../topology/Graph\"\nimport {\n  AnyFuncNode,\n  AnyNode,\n  DisplayFuncNode,\n  FuncEdge,\n  IFuncNode,\n  IReferenceFuncNode,\n  isFuncNode,\n  isReferenceFuncNode,\n  IVariableNode,\n  PreviewEdge,\n} from \"../types\"\n\nconst getNode = (nodes: AnyNode[]) => (id: NodeId): AnyNode => {\n  const node = nodes.find((b) => b.id === id)\n  if (node === undefined) {\n    throw new Error(`node ${id} does not exist`)\n  }\n  return node\n}\n\nconst getFuncNode = (nodes: AnyNode[]) => (id: NodeId): AnyFuncNode => {\n  const node = getNode(nodes)(id)\n  if (!(isFuncNode(node) || isReferenceFuncNode(node))) {\n    throw new Error(\"node is not FuncNode\")\n  }\n  return node\n}\n\nconst getOriginFuncNode = (nodes: AnyNode[]) => (id: NodeId): IFuncNode => {\n  const node = getNode(nodes)(id)\n  switch (node.type) {\n    case \"FuncNode\":\n      return node\n    case \"ReferenceFuncNode\":\n      return getOriginFuncNode(nodes)(node.reference)\n    case \"VariableNode\":\n      throw new Error(\"origin node is not exist\")\n  }\n}\n\n/*\n    表示用の node オブジェクトを取得する\n    inputLength など表示に必要なプロパティが追加されている\n    link 先を取得しなくても表示できるように name プロパティなども追加する\n  */\nexport const getDisplayNode = (nodes: AnyNode[]) => (\n  id: NodeId\n): DisplayFuncNode | null => {\n  const node = getNode(nodes)(id)\n  if (node === undefined || !(isFuncNode(node) || isReferenceFuncNode(node))) {\n    return null\n  }\n  const origin = getOriginFuncNode(nodes)(id)\n  return {\n    id: node.id,\n    type: \"FuncNode\",\n    x: node.x,\n    y: node.y,\n    linked: isReferenceFuncNode(node),\n    name: origin.name,\n    isAsync: origin.isAsync,\n    code: origin.code,\n    inputNames: getFuncNodeInputNames(nodes)(id),\n  }\n}\n\nexport const allDisplayNodes = (nodes: AnyNode[]): DisplayFuncNode[] =>\n  nodes.map((b) => getDisplayNode(nodes)(b.id)).filter(notEmpty)\n\nexport const getFuncNodeInputNames = (nodes: AnyNode[]) => (id: NodeId) => {\n  let node = getNode(nodes)(id)\n  if (node === undefined) {\n    return []\n  }\n  if (isReferenceFuncNode(node)) {\n    node = getNode(nodes)(node.reference)\n  }\n  if (node === undefined) {\n    return []\n  }\n  if (!isFuncNode(node)) {\n    return []\n  }\n  const func = createFunction(node.code)\n  const names = getParamNames(func)\n  return names\n}\n\nexport const getUniqueNodeName = (nodes: AnyNode[]) => (\n  requiredName: string = \"\"\n) => {\n  let name = requiredName\n  let count = 2\n  while (_.find(nodes, { name })) {\n    name = `${requiredName}${count}`\n    count++\n  }\n  return name\n}\n\nexport const lastNodeId = (nodes: AnyNode[]) => {\n  const maxId = _.max(nodes.map((b) => b.id))\n  return maxId !== undefined ? maxId : -1\n}\n\nexport const createFuncNode = (x: number, y: number): IFuncNode => ({\n  type: \"FuncNode\",\n  x,\n  y,\n  name: \"func\",\n  code: `x => x`,\n  isAsync: false,\n  id: -1,\n})\n\nexport const createVariableNode = (x: number, y: number): IVariableNode => ({\n  type: \"VariableNode\",\n  x,\n  y,\n  name: \"variable\",\n  id: -1,\n  value: \"\",\n})\n\nconst appendNode = (nodes: AnyNode[], node: Omit<AnyNode, \"id\">): AnyNode[] => [\n  ...nodes,\n  {\n    ...node,\n    id: lastNodeId(nodes) + 1,\n  } as AnyNode,\n]\n\nexport const graphSlice = createSlice({\n  name: \"graph\",\n  initialState: {\n    current: exampleGraph as IGraph<AnyNode, FuncEdge>,\n    editingNode: null as AnyNode | null,\n    previewEdge: null as PreviewEdge | null,\n    previewNode: null as DisplayFuncNode | null,\n  },\n  reducers: {\n    setEdges: (state, action: PayloadAction<FuncEdge[]>) => {\n      state.current.edges = action.payload\n    },\n    setNodes: (state, action: PayloadAction<AnyNode[]>) => {\n      state.current.nodes = action.payload\n    },\n    setEditingNode: (state, action: PayloadAction<AnyNode | null>) => {\n      state.editingNode = action.payload\n    },\n    setPreviewEdge: (state, action: PayloadAction<PreviewEdge | null>) => {\n      state.previewEdge = action.payload\n    },\n    setPreviewNode: (state, action: PayloadAction<DisplayFuncNode | null>) => {\n      state.previewNode = action.payload\n    },\n    addNode: (state, action: PayloadAction<AnyNode>) => {\n      const { nodes } = state.current\n      state.current.nodes = appendNode(nodes, action.payload)\n    },\n    dupulicateNode: (state, action: PayloadAction<NodeId>) => {\n      const { nodes } = state.current\n      const block = getFuncNode(nodes)(action.payload)\n      state.current.nodes = appendNode(nodes, {\n        ...block,\n        y: block.y + 180,\n      })\n    },\n    addReferenceFuncNode: (state, action: PayloadAction<NodeId>) => {\n      const { nodes } = state.current\n      const id = action.payload\n      const block = getFuncNode(nodes)(id)\n      const reference = isReferenceFuncNode(block) ? block.reference : id\n      state.current.nodes = appendNode(nodes, {\n        type: \"ReferenceFuncNode\",\n        reference,\n        x: block.x,\n        y: block.y + 180,\n      } as IReferenceFuncNode)\n    },\n    updateNode: (\n      state,\n      action: PayloadAction<{\n        id: NodeId\n        obj: Partial<AnyNode>\n      }>\n    ) => {\n      state.current.nodes = state.current.nodes.map((b) => {\n        if (b.id !== action.payload.id) {\n          return b\n        }\n        return { ...b, ...action.payload.obj } as AnyNode\n      })\n    },\n    addEdge: (\n      state,\n      action: PayloadAction<{\n        fromId: NodeId\n        toId: NodeId\n        toIndex: number\n      }>\n    ) => {\n      const edge = action.payload\n      if (!_.find(state.current.edges, edge)) {\n        state.current.edges = [...state.current.edges, edge]\n      }\n    },\n    removeNode: (state, action: PayloadAction<NodeId>) => {\n      const { nodes } = state.current\n      const id = action.payload\n      const node = getNode(nodes)(id)\n      const removeNodeIds = state.current.nodes\n        .filter(\n          (n) => n.id === id || (isReferenceFuncNode(n) && n.reference == id)\n        )\n        .map((n) => n.id)\n\n      state.current = {\n        nodes: state.current.nodes.filter((n) => !removeNodeIds.includes(n.id)),\n        edges: state.current.edges.filter(\n          (e) =>\n            !removeNodeIds.includes(e.fromId) && !removeNodeIds.includes(e.toId)\n        ),\n      }\n    },\n    removeEdge: (state, action: PayloadAction<NodeId>) => {\n      const fromId = action.payload\n      state.current.edges = state.current.edges.filter(\n        (e) => e.fromId !== fromId\n      )\n    },\n  },\n})\n\nexport const {\n  setEdges,\n  setNodes,\n  setEditingNode,\n  setPreviewEdge,\n  setPreviewNode,\n  addEdge,\n  updateNode,\n  removeNode,\n  removeEdge,\n  addNode,\n  addReferenceFuncNode,\n  dupulicateNode,\n} = graphSlice.actions\n","import { IGraph } from \"../topology/Graph\"\nimport { AnyNode, FuncEdge } from \"../types\"\n\nexport const exampleGraph: IGraph<AnyNode, FuncEdge> = {\n  nodes: [\n    {\n      type: \"FuncNode\",\n      name: \"constant\",\n      code: \"() => 1\",\n      x: 44,\n      y: 26,\n      id: 0,\n    },\n    {\n      type: \"FuncNode\",\n      name: \"time\",\n      code: \"() => 1000\",\n      x: 49,\n      y: 165,\n      id: 1,\n    },\n    {\n      type: \"FuncNode\",\n      name: \"delay\",\n      code:\n        \"(value, delay) => new Promise((resolve, reject) => {\\n  setTimeout(() => resolve(value), delay)\\n})\",\n      x: 183,\n      y: 26,\n      isAsync: true,\n      id: 2,\n    },\n    {\n      type: \"FuncNode\",\n      name: \"constant2\",\n      code: \"() => 2\",\n      x: 367,\n      y: 110,\n      id: 3,\n    },\n    {\n      type: \"FuncNode\",\n      name: \"time2\",\n      code: \"() => 2000\",\n      x: 377,\n      y: 247,\n      id: 4,\n    },\n    {\n      type: \"ReferenceFuncNode\",\n      reference: 2,\n      x: 518,\n      y: 111,\n      id: 5,\n    },\n    {\n      type: \"FuncNode\",\n      id: 6,\n      x: 650.6666564941406,\n      y: 26,\n      name: \"add\",\n      code: \"(a, b) => a + b\",\n    },\n    {\n      type: \"FuncNode\",\n      name: \"popup\",\n      code: \"str => alert(str)\",\n      x: 815,\n      y: 27,\n      id: 7,\n    },\n  ],\n  edges: [\n    {\n      fromId: 0,\n      toId: 2,\n      toIndex: 0,\n    },\n    {\n      fromId: 1,\n      toId: 2,\n      toIndex: 1,\n    },\n    {\n      fromId: 3,\n      toId: 5,\n      toIndex: 0,\n    },\n    {\n      fromId: 4,\n      toId: 5,\n      toIndex: 1,\n    },\n    {\n      fromId: 5,\n      toId: 6,\n      toIndex: 1,\n    },\n    {\n      fromId: 2,\n      toId: 6,\n      toIndex: 0,\n    },\n    {\n      fromId: 6,\n      toId: 7,\n      toIndex: 0,\n    },\n  ],\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\"\nimport { AppDispatch, RootState } from \"./stores/store\"\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import React, { FC } from \"react\"\nimport Icon from \"../components/Icon\"\nimport buildCode from \"../helpers/buildCode\"\nimport { useAppDispatch, useAppSelector } from \"../hooks\"\nimport { setEdges, setNodes } from \"../stores/GraphStore\"\n\nexport const Toolbar: FC<{\n  onClickHelp: () => void\n}> = ({ onClickHelp }) => {\n  const graph = useAppSelector((state) => state.graph.current)\n  const dispatch = useAppDispatch()\n\n  const onClickPlay = () => {\n    const code = buildCode(graph)\n    eval(code)\n  }\n\n  const onClickClear = () => {\n    dispatch(setEdges([]))\n    dispatch(setNodes([]))\n  }\n\n  return (\n    <div className=\"Toolbar\">\n      <a className=\"ToolbarButton\" onClick={onClickPlay}>\n        <Icon name=\"play\" />\n      </a>\n      <a className=\"ToolbarButton\" onClick={onClickClear}>\n        <Icon name=\"delete\" />\n      </a>\n      <a\n        className=\"ToolbarButton\"\n        target=\"_blank\"\n        href=\"https://github.com/ryohey/2d\"\n      >\n        <Icon name=\"github-circle\" />\n      </a>\n      <a className=\"ToolbarButton\" onClick={onClickHelp}>\n        Help\n      </a>\n    </div>\n  )\n}\n","import { getParamNames } from \"./functionHelper\"\n\nexport default function () {\n  const codes = [\n    {\n      code: `() => \"Hello\"`,\n      name: \"helloStr\",\n    },\n    {\n      code: `msg => console.log(msg)`,\n      name: \"log\",\n    },\n    {\n      code: `msg => alert(msg)`,\n      name: \"alert\",\n    },\n    {\n      code: `url => fetch(url)`,\n      name: \"fetch\",\n      isAsync: true,\n    },\n  ]\n\n  return codes.map((c) => {\n    const func = eval(`() => { return ${c.code} }`)()\n    return {\n      ...c,\n      inputNames: getParamNames(func),\n    }\n  })\n}\n","import { NodeId, INode, IEdge } from \"./topology/Graph\"\n\nexport interface BaseNode<T extends string> extends INode {\n  type: T\n}\n\nexport interface IFuncNode extends BaseNode<\"FuncNode\"> {\n  name: string\n  code: string\n  isAsync?: boolean\n  x: number\n  y: number\n}\n\nexport interface IReferenceFuncNode extends BaseNode<\"ReferenceFuncNode\"> {\n  reference: NodeId\n  x: number\n  y: number\n}\n\nexport const isFuncNode = (node: AnyNode): node is IFuncNode =>\n  node.type === \"FuncNode\"\nexport const isReferenceFuncNode = (\n  node: AnyNode\n): node is IReferenceFuncNode => node.type === \"ReferenceFuncNode\"\n\nexport type AnyFuncNode = IFuncNode | IReferenceFuncNode\n\nexport interface IVariableNode extends BaseNode<\"VariableNode\"> {\n  name: string\n  value: any\n  x: number\n  y: number\n}\nexport const isVariableNode = (node: AnyNode): node is IVariableNode =>\n  node.type === \"VariableNode\"\n\nexport type AnyNode = AnyFuncNode | IVariableNode\n\nexport interface DisplayFuncNode extends IFuncNode {\n  linked: boolean\n  inputNames: string[]\n}\n\nexport interface IPoint {\n  x: number\n  y: number\n}\n\nexport interface PreviewEdge {\n  fromId: NodeId\n  toPosition: IPoint\n}\n\nexport interface FuncEdge extends IEdge {\n  toIndex: number\n}\n","import React, {\n  createContext,\n  FC,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\nimport { IPoint } from \"../types\"\n\nexport interface DragEvent {\n  originEvent: React.MouseEvent<HTMLDivElement, MouseEvent>\n}\n\nexport interface DragBeginEvent extends DragEvent {\n  start: any | null\n}\n\nexport interface DragMoveEvent extends DragEvent {\n  startPosition: IPoint\n  movement: IPoint\n  start: any | null\n}\n\nexport interface DragEndEvent extends DragEvent {\n  startPosition: IPoint\n  movement: IPoint | null\n  start: any | null\n  end: any | null\n}\n\nexport interface MouseHandler {\n  onMouseDown: (e: DragBeginEvent) => void\n  onMouseDragMove: (e: DragMoveEvent) => void\n  onMouseUp: (e: DragEndEvent) => void\n}\n\ninterface DragState {\n  startData: any | null\n  startPosition: IPoint | null\n  container: HTMLDivElement | null\n}\n\ntype DragContextData = DragState & { handler: MouseHandler | null }\n\nexport const DragContext = createContext<\n  [DragContextData, (state: DragContextData) => void]\n>([\n  {\n    startData: null,\n    startPosition: null,\n    container: null,\n    handler: null,\n  },\n  () => {},\n])\n\ntype DivPropsWithoutMouse = Omit<\n  React.HTMLAttributes<HTMLDivElement>,\n  \"onMouseDown\" | \"onMouseUp\"\n>\n\nexport type DragContainerProps = DivPropsWithoutMouse &\n  MouseHandler & {\n    onMount?: (instance: HTMLDivElement | null) => void\n  }\n\nexport const DragContainer: FC<DragContainerProps> = (props) => {\n  const {\n    onMouseDown,\n    onMouseDragMove,\n    onMouseUp,\n    children,\n    ...restProps\n  } = props\n  const [state, setState] = useState<DragState>({\n    startData: null,\n    startPosition: null,\n    container: null,\n  })\n  const divRef = useRef(null)\n  useEffect(() => {\n    setState((state) => ({\n      ...state,\n      container: divRef.current,\n    }))\n  }, [])\n  return (\n    <DragContext.Provider\n      value={[\n        { ...state, handler: { onMouseDown, onMouseDragMove, onMouseUp } },\n        setState,\n      ]}\n    >\n      <DragTrigger data={null} onMount={divRef} {...restProps}>\n        {children}\n      </DragTrigger>\n    </DragContext.Provider>\n  )\n}\n\nexport type DragTriggerProps = DivPropsWithoutMouse & {\n  data: any\n  onMount?: React.ClassAttributes<HTMLDivElement>[\"ref\"]\n}\n\nexport const DragTrigger: FC<DragTriggerProps> = (props) => {\n  const { data, onMount, ...restProps } = props\n  const [state, setState] = useContext(DragContext)\n\n  const getRelativePosition = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    const offset =\n      state.container !== null\n        ? {\n            x: state.container.offsetLeft,\n            y: state.container.offsetTop,\n          }\n        : { x: 0, y: 0 }\n    return {\n      x: e.pageX - offset.x,\n      y: e.pageY - offset.y,\n    }\n  }\n\n  return (\n    <div\n      {...restProps}\n      ref={onMount}\n      onMouseDown={(e) => {\n        e.stopPropagation()\n        if (state.handler !== null) {\n          setState({\n            ...state,\n            startData: data,\n            startPosition: getRelativePosition(e),\n          })\n          state.handler.onMouseDown({\n            originEvent: e,\n            start: data,\n          })\n        }\n      }}\n      onMouseMove={(e) => {\n        e.stopPropagation()\n        if (state.handler !== null && state.startPosition !== null) {\n          const pos = getRelativePosition(e)\n          state.handler.onMouseDragMove({\n            originEvent: e,\n            startPosition: state.startPosition,\n            movement: {\n              x: pos.x - state.startPosition.x,\n              y: pos.y - state.startPosition.y,\n            },\n            start: state.startData,\n          })\n        }\n      }}\n      onMouseUp={(e) => {\n        e.stopPropagation()\n        if (\n          state.handler !== null &&\n          state.startPosition !== null &&\n          state.container !== null\n        ) {\n          setState({\n            ...state,\n            startData: null,\n            startPosition: null,\n          })\n          const pos = getRelativePosition(e)\n          state.handler.onMouseUp({\n            originEvent: e,\n            startPosition: state.startPosition,\n            movement: {\n              x: pos.x - state.startPosition.x,\n              y: pos.y - state.startPosition.y,\n            },\n            start: state.startData,\n            end: data,\n          })\n        }\n      }}\n    />\n  )\n}\n","import React, { FC } from \"react\"\nimport Modal from \"react-modal\"\n\nconst HelpContent = () => (\n  <div>\n    <h1>Help</h1>\n    <dl>\n      <dt>Create blocks</dt>\n      <dd>Double-click on the stage.</dd>\n      <dt>Edit blocks</dt>\n      <dd>Double-click on the block. Edit the code.</dd>\n      <dt>Remove blocks</dt>\n      <dd>Click the downward arrow on the block. Select remove.</dd>\n      <dt>Run</dt>\n      <dd>\n        Click the play button. The graph will be evaluated as JavaScript. You\n        should add the output block that runs alert() or console.log() to see\n        the result.\n      </dd>\n    </dl>\n  </div>\n)\n\nexport interface HelpModalProps {\n  isOpen: boolean\n  close: () => void\n}\n\nexport const HelpModal: FC<HelpModalProps> = ({ isOpen, close }) => (\n  <Modal\n    contentLabel=\"help\"\n    isOpen={isOpen}\n    onRequestClose={close}\n    overlayClassName=\"HelpModalOverlay\"\n    className=\"HelpModal\"\n  >\n    <HelpContent />\n  </Modal>\n)\n","import React, { FC, useState } from \"react\"\n\nexport interface DrawCanvasProps {\n  draw: (ctx: CanvasRenderingContext2D) => void\n  width: number\n  height: number\n}\n\nexport const DrawCanvas: FC<DrawCanvasProps> = ({ draw, width, height }) => {\n  const [canvas, setCanvas] = useState<HTMLCanvasElement | null>(null)\n\n  if (canvas !== null) {\n    canvas.width = width\n    canvas.height = height\n\n    const ctx = canvas.getContext(\"2d\")\n    if (ctx) {\n      draw(ctx)\n    }\n  }\n\n  return <canvas ref={setCanvas} width={width} height={height} />\n}\n","import React, { FC, MouseEvent } from \"react\"\nimport styled from \"styled-components\"\nimport { IPoint } from \"../types\"\n\nexport interface DropDownItem {\n  name: string\n  onClick: (e: MouseEvent<any>) => void\n}\n\nexport interface DropDownMenuProps {\n  position?: IPoint\n  items: DropDownItem[]\n  onRequestClose: () => void\n}\n\nconst Container = styled.div`\n  position: absolute;\n  background: var(--background-color);\n  padding: 0.5em 0em;\n  font-size: 90%;\n  width: 10em;\n  z-index: 100;\n  box-shadow: 0 2px 9px rgba(0, 0, 0, 0.24);\n\n  > div {\n    padding: 0.5em;\n\n    &:hover {\n      background: var(--secondary-background-color);\n    }\n  }\n`\n\nexport const DropDownMenu: FC<DropDownMenuProps> = ({\n  items,\n  onRequestClose,\n  position,\n}) => {\n  return (\n    <Container\n      style={\n        position !== undefined ? { left: position.x, top: position.y } : {}\n      }\n    >\n      {items.map((item, i) => (\n        <div\n          onClick={(e) => {\n            onRequestClose()\n            item.onClick(e)\n          }}\n          key={i}\n        >\n          {item.name}\n        </div>\n      ))}\n    </Container>\n  )\n}\n","import React, { FC, FormEvent, useState } from \"react\"\nimport Modal from \"react-modal\"\nimport { useAppDispatch } from \"../hooks\"\nimport { updateNode } from \"../stores/GraphStore\"\nimport { IFuncNode } from \"../types\"\n\nexport type ModalInput = Pick<IFuncNode, \"id\" | \"name\" | \"code\" | \"isAsync\">\n\nexport interface EditFuncModalProps {\n  closeModal: () => void\n  node: IFuncNode\n}\n\nexport const EditFuncModal: FC<EditFuncModalProps> = ({ closeModal, node }) => {\n  const [modalInput, setModalInput] = useState<ModalInput>(node)\n  const dispatch = useAppDispatch()\n\n  const onClickModalOK = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    e.stopPropagation()\n    closeModal()\n    dispatch(\n      updateNode({\n        id: modalInput.id,\n        obj: {\n          name: modalInput.name,\n          code: modalInput.code,\n          isAsync: modalInput.isAsync,\n        },\n      })\n    )\n  }\n\n  return (\n    <Modal\n      contentLabel=\"edit block\"\n      isOpen={true}\n      onRequestClose={closeModal}\n      overlayClassName=\"BlockModalOverlay\"\n      className=\"BlockModal\"\n    >\n      <form onSubmit={onClickModalOK}>\n        <div className=\"section\">\n          <label>name</label>\n          <input\n            type=\"text\"\n            value={modalInput.name}\n            onChange={(e) =>\n              setModalInput({\n                ...modalInput,\n                name: e.target.value,\n              })\n            }\n          />\n        </div>\n        <div className=\"section\">\n          <label>code</label>\n          <textarea\n            value={modalInput.code}\n            onChange={(e) =>\n              setModalInput({\n                ...modalInput,\n                code: e.target.value,\n              })\n            }\n          />\n        </div>\n        <div className=\"section\">\n          <label>async</label>\n          <div>\n            <input\n              type=\"checkbox\"\n              checked={modalInput.isAsync}\n              onChange={(e) =>\n                setModalInput({\n                  ...modalInput,\n                  isAsync: e.target.checked,\n                })\n              }\n            />\n          </div>\n        </div>\n        <div className=\"section footer\">\n          <button type=\"button\" className=\"button\" onClick={closeModal}>\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"button primary\">\n            OK\n          </button>\n        </div>\n      </form>\n    </Modal>\n  )\n}\n","import React, { FC, useState } from \"react\"\nimport { DragTrigger } from \"../components/Drag\"\nimport { DropDownMenu } from \"../components/DropDownMenu\"\nimport Icon from \"../components/Icon\"\nimport { useAppDispatch } from \"../hooks\"\nimport {\n  addReferenceFuncNode,\n  dupulicateNode,\n  removeNode,\n  setEditingNode,\n} from \"../stores/GraphStore\"\nimport { DisplayFuncNode } from \"../types\"\nimport \"./FuncNode.css\"\n\nexport interface PortProps {\n  name: string\n  dragData: any\n}\n\nconst LeftPort: FC<PortProps> = ({ name, dragData }) => {\n  return (\n    <DragTrigger data={dragData} className=\"Port LeftPort\">\n      <Icon name=\"arrow-right-drop-circle-outline\" />\n      <div className=\"label\">{name}</div>\n    </DragTrigger>\n  )\n}\n\nconst RightPort: FC<PortProps> = ({ name, dragData }) => {\n  return (\n    <DragTrigger data={dragData} className=\"Port RightPort\">\n      <div className=\"label\">{name}</div>\n      <Icon name=\"arrow-right-drop-circle-outline\" />\n    </DragTrigger>\n  )\n}\n\nexport interface FuncNodeProps {\n  node: DisplayFuncNode\n  isPreview?: boolean\n  containerRef?: (c: HTMLElement | null) => void\n}\n\nexport const FuncNode: FC<FuncNodeProps> = ({\n  node,\n  isPreview,\n  containerRef,\n}) => {\n  const [isMenuOpened, setIsMenuOpened] = useState(false)\n  const dispatch = useAppDispatch()\n\n  const classes = [\n    \"Block\",\n    node.linked && \"linked\",\n    node.isAsync && \"async\",\n    isPreview && \"preview\",\n  ]\n\n  const openModal = () => {\n    dispatch(setEditingNode(node))\n  }\n\n  return (\n    <div\n      className={classes.filter((c) => c).join(\" \")}\n      style={{ left: node.x, top: node.y }}\n      ref={(c) => {\n        if (containerRef !== undefined) {\n          containerRef(c)\n        }\n      }}\n    >\n      <DragTrigger\n        className=\"header\"\n        data={{ node, type: \"FuncNodeHeader\" }}\n        onDoubleClick={(e) => {\n          e.stopPropagation()\n          openModal()\n        }}\n      >\n        <div className=\"name\">\n          {node.linked && <Icon name=\"link\" className=\"link-icon\" />}\n          {node.name}\n        </div>\n        <div\n          className=\"menu-button\"\n          onDoubleClick={(e) => e.stopPropagation()}\n          onClick={(e) => {\n            e.stopPropagation()\n            isMenuOpened ? setIsMenuOpened(false) : setIsMenuOpened(true)\n          }}\n        >\n          <Icon name=\"menu-down\" />\n        </div>\n      </DragTrigger>\n      {isMenuOpened && (\n        <DropDownMenu\n          items={[\n            {\n              name: \"make reference\",\n              onClick: (e) => dispatch(addReferenceFuncNode(node.id)),\n            },\n            {\n              name: \"duplicate\",\n              onClick: (e) => dispatch(dupulicateNode(node.id)),\n            },\n            {\n              name: \"remove\",\n              onClick: (e) => dispatch(removeNode(node.id)),\n            },\n          ]}\n          onRequestClose={() => setIsMenuOpened(false)}\n        />\n      )}\n      <div className=\"ports\">\n        <div className=\"inputs\">\n          {node.inputNames.map((name, i) => (\n            <LeftPort\n              name={name}\n              key={i}\n              dragData={{ node, index: i, type: \"FuncNodeInput\" }}\n            />\n          ))}\n        </div>\n        <div className=\"outputs\">\n          <RightPort name=\"\" dragData={{ node, type: \"FuncNodeOutput\" }} />\n        </div>\n      </div>\n      {!node.linked && (\n        <pre className=\"code\" onDoubleClick={openModal}>\n          {node.code}\n        </pre>\n      )}\n    </div>\n  )\n}\n","import React, { FC } from \"react\"\nimport { IVariableNode } from \"../types\"\nimport styled from \"styled-components\"\n\ninterface VariableNodeProps {\n  node: IVariableNode\n}\n\nconst Container = styled.div`\n  position: absolute;\n`\n\nexport const VariableNode: FC<VariableNodeProps> = ({ node }) => {\n  return (\n    <Container style={{ left: node.x, top: node.y }}>{node.name}</Container>\n  )\n}\n","import React, { FC, MouseEvent, useState } from \"react\"\nimport { DrawCanvas } from \"../components/DrawCanvas\"\nimport { DropDownMenu } from \"../components/DropDownMenu\"\nimport { useAppDispatch, useAppSelector } from \"../hooks\"\nimport {\n  addNode,\n  allDisplayNodes,\n  createFuncNode,\n  setEditingNode,\n} from \"../stores/GraphStore\"\nimport { NodeId } from \"../topology/Graph\"\nimport { IPoint, isVariableNode } from \"../types\"\nimport { EditFuncModal } from \"./EditFuncModal\"\nimport { FuncNode } from \"./FuncNode\"\nimport { VariableNode } from \"./VariableNode\"\n\nexport interface StageState {\n  modalIsOpen: boolean\n}\n\nexport const Stage: FC = () => {\n  const {\n    current: { nodes, edges },\n    previewNode,\n    editingNode,\n    previewEdge,\n  } = useAppSelector((state) => state.graph)\n  const dispatch = useAppDispatch()\n  const [container, setContainer] = useState<HTMLElement | null>(null)\n  const [blockElements, setBlockElements] = useState<{\n    [id: number]: HTMLElement | undefined\n  }>({})\n  const [menuPosition, setMenuPosition] = useState<IPoint | null>(null)\n\n  const positionOfInput = (id: NodeId, index: number) => {\n    const block = blockElements[id]\n    if (block === undefined) {\n      return {\n        x: 0,\n        y: 0,\n      }\n    }\n    return {\n      x: block.offsetLeft,\n      y: block.offsetTop + 54 + 20 * index,\n    }\n  }\n\n  const positionOfOutput = (id: NodeId) => {\n    const block = blockElements[id]\n    if (block === undefined) {\n      return {\n        x: 0,\n        y: 0,\n      }\n    }\n    return {\n      x: block.offsetLeft + block.clientWidth,\n      y: block.offsetTop + 54,\n    }\n  }\n\n  const renderEdges = (ctx: CanvasRenderingContext2D) => {\n    const { canvas } = ctx\n\n    const renderCurve = (from: IPoint, to: IPoint) => {\n      ctx.beginPath()\n      ctx.moveTo(from.x, from.y)\n      const curveLength = Math.abs(to.x - from.x) * 0.3\n      ctx.bezierCurveTo(\n        from.x + curveLength,\n        from.y,\n        to.x - curveLength,\n        to.y,\n        to.x,\n        to.y\n      )\n      ctx.stroke()\n    }\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    ctx.lineWidth = 2\n    ctx.strokeStyle = \"white\"\n    for (let edge of edges) {\n      const from = positionOfOutput(edge.fromId)\n      const to = positionOfInput(edge.toId, edge.toIndex)\n      renderCurve(from, to)\n    }\n\n    if (previewEdge) {\n      ctx.strokeStyle = \"rgba(255, 255, 255, 0.2)\"\n      const from = positionOfOutput(previewEdge.fromId)\n      renderCurve(from, previewEdge.toPosition)\n    }\n  }\n\n  const onDoubleClickStage = (e: MouseEvent<any>) => {\n    const bounds = e.currentTarget.getBoundingClientRect()\n    setMenuPosition({\n      x: e.clientX - bounds.left,\n      y: e.clientY - bounds.top,\n    })\n  }\n\n  const closeModal = () => {\n    dispatch(setEditingNode(null))\n  }\n\n  return (\n    <div\n      onDoubleClick={onDoubleClickStage}\n      className=\"Stage\"\n      ref={setContainer}\n    >\n      {container !== null && (\n        <DrawCanvas\n          draw={renderEdges}\n          width={container.clientWidth}\n          height={container.clientHeight}\n        />\n      )}\n      {allDisplayNodes(nodes).map((b) => {\n        return (\n          <FuncNode\n            node={b}\n            key={b.id}\n            containerRef={(c) => {\n              if (c != null) {\n                blockElements[b.id] = c\n                setBlockElements(blockElements)\n              }\n            }}\n          />\n        )\n      })}\n      {nodes.filter(isVariableNode).map((node) => (\n        <VariableNode node={node} key={node.id} />\n      ))}\n      {previewNode && (\n        <FuncNode key=\"preview\" isPreview={true} node={previewNode} />\n      )}\n      {editingNode !== null && editingNode.type === \"FuncNode\" && (\n        <EditFuncModal closeModal={closeModal} node={editingNode} />\n      )}\n      {menuPosition && (\n        <DropDownMenu\n          position={menuPosition}\n          items={[\n            {\n              name: \"new function node\",\n              onClick: (e) => {\n                const bounds = e.currentTarget.getBoundingClientRect()\n                dispatch(\n                  addNode(\n                    createFuncNode(\n                      e.clientX - bounds.left,\n                      e.clientY - bounds.top\n                    )\n                  )\n                )\n              },\n            },\n            /*{\n              name: \"new variable node\",\n              onClick: (e) => {\n                const bounds = e.currentTarget.getBoundingClientRect()\n                dispatch(\n                  addNode(\n                    createVariableNode(\n                      e.clientX - bounds.left,\n                      e.clientY - bounds.top\n                    )\n                  )\n                )\n              },\n            },*/\n          ]}\n          onRequestClose={() => setMenuPosition(null)}\n        />\n      )}\n    </div>\n  )\n}\n","import React, { FC } from \"react\"\nimport { DragTrigger } from \"../components/Drag\"\nimport Icon from \"../components/Icon\"\nimport { useAppSelector } from \"../hooks\"\n\nexport const ToolBox: FC = () => {\n  const codes = useAppSelector((state) => state.codes)\n\n  return (\n    <div className=\"ToolBox\">\n      <div className=\"header\">toolbox</div>\n      {codes.map((c, i) => (\n        <DragTrigger\n          key={i}\n          className=\"item\"\n          data={{\n            code: c,\n            type: \"ToolBoxItem\",\n          }}\n        >\n          <div className=\"name\">{c.name}</div>\n          <Icon name=\"arrow-top-right\" />\n        </DragTrigger>\n      ))}\n    </div>\n  )\n}\n","import React, { FC, useState } from \"react\"\nimport { DragContainer } from \"../components/Drag\"\nimport { HelpModal } from \"../components/HelpModal\"\nimport buildCode from \"../helpers/buildCode\"\nimport { useMouseHandler } from \"../helpers/createMouseHandler\"\nimport { useAppSelector } from \"../hooks\"\nimport \"./App.css\"\nimport { Stage } from \"./Stage\"\nimport { Toolbar } from \"./Toolbar\"\nimport { ToolBox } from \"./ToolBox\"\n\nfunction CodeOutput() {\n  const { edges, nodes } = useAppSelector((state) => state.graph.current)\n  const code = buildCode({ edges, nodes })\n  return (\n    <div className=\"CodeOutput\">\n      <pre>{code}</pre>\n    </div>\n  )\n}\n\nexport const App: FC<{}> = () => {\n  const [isHelpModalOpen, setIsHelpModalOpen] = useState(false)\n  const mouseHandler = useMouseHandler()\n\n  return (\n    <div className=\"App\">\n      <Toolbar onClickHelp={() => setIsHelpModalOpen(true)} />\n      <DragContainer {...mouseHandler} className=\"main\">\n        <div className=\"content\">\n          <ToolBox />\n          <Stage />\n          <CodeOutput />\n        </div>\n      </DragContainer>\n      <HelpModal\n        isOpen={isHelpModalOpen}\n        close={() => setIsHelpModalOpen(false)}\n      />\n    </div>\n  )\n}\n","import { useCallback } from \"react\"\nimport { DragBeginEvent, DragEndEvent, DragMoveEvent } from \"../components/Drag\"\nimport { useAppDispatch, useAppSelector } from \"../hooks\"\nimport { Code } from \"../stores/CodeStore\"\nimport {\n  addEdge,\n  addNode,\n  removeEdge,\n  setPreviewEdge,\n  setPreviewNode,\n  updateNode,\n} from \"../stores/GraphStore\"\n\nexport const useMouseHandler = () => {\n  const {\n    current: { nodes, edges },\n    previewNode,\n  } = useAppSelector((state) => state.graph)\n  const dispatch = useAppDispatch()\n\n  const onMouseDown = useCallback((e: DragBeginEvent) => {\n    if (e.start === null) {\n      return\n    }\n  }, [])\n\n  const onMouseDragMove = useCallback(\n    (e: DragMoveEvent) => {\n      if (e.start === null) {\n        return\n      }\n      switch (e.start.type) {\n        case \"FuncNodeHeader\":\n          dispatch(\n            updateNode({\n              id: e.start.node.id,\n              obj: {\n                x: e.movement.x + e.start.node.x,\n                y: e.movement.y + e.start.node.y,\n              },\n            })\n          )\n          break\n        case \"ToolBoxItem\":\n          const code: Code = e.start.code\n          dispatch(\n            setPreviewNode({\n              ...code,\n              id: 0,\n              type: \"FuncNode\",\n              linked: false,\n              x: e.startPosition.x + e.movement.x,\n              y: e.startPosition.y + e.movement.y,\n            })\n          )\n          break\n        case \"FuncNodeOutput\":\n          dispatch(\n            setPreviewEdge({\n              fromId: e.start.node.id,\n              toPosition: {\n                x: e.startPosition.x + e.movement.x,\n                y: e.startPosition.y + e.movement.y,\n              },\n            })\n          )\n          break\n      }\n    },\n    [dispatch]\n  )\n\n  const onMouseUp = useCallback(\n    (e: DragEndEvent) => {\n      console.log(e)\n      if (e.start !== null) {\n        if (e.end !== null) {\n          if (\n            e.start.type === \"FuncNodeOutput\" &&\n            e.end.type === \"FuncNodeInput\"\n          ) {\n            dispatch(\n              addEdge({\n                fromId: e.start.node.id,\n                toId: e.end.node.id,\n                toIndex: e.end.index,\n              })\n            )\n          }\n          // 同じポートでドラッグした場合はエッジを削除\n          if (\n            e.start.type === \"FuncNodeOutput\" &&\n            e.end.type === \"FuncNodeOutput\" &&\n            e.start.node.id === e.end.node.id\n          ) {\n            dispatch(removeEdge(e.start.node.id))\n          }\n        }\n        if (\n          e.start.type === \"ToolBoxItem\" &&\n          (e.end === null || e.end.node.id === 0)\n        ) {\n          if (previewNode) {\n            dispatch(addNode(previewNode))\n          }\n        }\n      }\n\n      dispatch(setPreviewNode(null))\n      dispatch(setPreviewEdge(null))\n    },\n    [previewNode, dispatch]\n  )\n\n  return {\n    onMouseDown,\n    onMouseDragMove,\n    onMouseUp,\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport exampleCodes from \"../helpers/exampleCodes\"\n\nexport interface Code {\n  code: string\n  name: string\n  inputNames: string[]\n}\n\nexport const codeSlice = createSlice({\n  name: \"code\",\n  initialState: exampleCodes() as Code[],\n  reducers: {},\n})\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport { codeSlice } from \"./CodeStore\"\nimport { graphSlice } from \"./GraphStore\"\n\nexport const store = configureStore({\n  reducer: {\n    codes: codeSlice.reducer,\n    graph: graphSlice.reducer,\n  },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { App } from \"./containers/App\"\nimport \"./index.css\"\nimport { store } from \"./stores/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n","import React, { FC } from \"react\"\n\nimport e from \"../helpers/getElementType\"\nimport classnames from \"classnames\"\n\nimport \"./Icon.css\"\nimport \"mdi/css/materialdesignicons.css\"\n\nexport interface IconProps {\n  component?: any\n  name: string\n  className?: string\n}\n\nconst Icon: FC<IconProps> = ({ component, name, className }) => {\n  const ElementType = e(component)\n  return (\n    <ElementType\n      className={classnames(\"Icon\", \"mdi\", `mdi-${name}`, className)}\n    />\n  )\n}\n\nexport default Icon\n","import React from \"react\"\n\nexport type Component<P = any> =\n  | React.StatelessComponent<P>\n  | React.ComponentClass<P>\n\nexport default function getElementType(\n  preferredElement: Component<any>,\n  defaultElement = \"div\"\n): Component<any> {\n  return preferredElement || defaultElement\n}\n"],"sourceRoot":""}